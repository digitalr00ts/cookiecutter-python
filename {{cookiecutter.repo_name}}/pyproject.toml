[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.4"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 98
target-version = ['py36','py37','py38']

[tool.coverage]
    [tool.coverage.run]
    branch = true
    source = [ "src/" ]
    omit = [ "tests/*" ]

    [tool.coverage.report]
    precision = 2
    show_missing = true
    
[tool.flakehell.plugins]
dlint = [ '+*' ]
flake8-bandit = [ '+*' ]
flake8-broken-line = [ '+*' ]
flake8-bugbear = [ '+*' ]
flake8-commas = [ '+*' ]
flake8-comprehensions = [ '+*' ]
flake8-darglint = [ '+*' ]
flake8-debugger = [ '+*' ]
flake8-docstrings = [ '+*' ]
flake8-eradicate = [ '+*' ]
flake8-isort = [ '+*' ]
flake8-pytest-style = [ '+*' ]
# flake8-quotes = [ '+*' ]
flake8-rst-docstrings = [ '+*' ]
flake8-string-format = [ '+*' ]
mccabe = [ '+*' ]
pep8-naming = [ '+*' ]
# pycodestyle = [ '+*' ]
# pyflakes = [ '+*' ]
pylint = [ '+*' ]
wemake-python-styleguide = [ '+*', '-WPS305' ]

[tool.isort]
atomic = true
lines_after_imports = 2
lines_between_types = 0
multi_line_output = 3
not_skip = '__init__.py'
default_section = 'THIRDPARTY'
known_first_party = '{{ cookiecutter.project_slug }}'

[tool.pylint]
    [tool.pylint.master]
    jobs = 0
    persistent = 'no'
    load-plugins = [
        'pylint.extensions.broad_try_clause',
        'pylint.extensions.emptystring',
        'pylint.extensions.comparetozero',
        'pylint.extensions.bad_builtin',
        'pylint.extensions.mccabe',
        'pylint.extensions.docstyle',
        'pylint.extensions.check_elif',
        'pylint.extensions.redefined_variable_type',
        'pylint.extensions.overlapping_exceptions',
        'pylint.extensions.docparams',
    ]

    [tool.pylint.messages_control]
    enable = [
        'F',  # Fatal
        'E',  # Error
        'W',  # Warning
        'R',  # Refactor
        'C',  # Convention
        'I',  # Informational
    ]
    disable= [
        'fixme',
        'bad-continuation',  # TODO: this check is removed in pylint 2.6
        'no-absolute-import',
        'spelling',
        'suppressed-message',
        'locally-disabled',
    ]

    [tool.pylint.reports]
    output-format = 'colorized'
    score = 'no'

    [tool.pylint.format]
    single-line-if-stmt = 'yes'

    [tool.pylint.logging]
    logging-format-style='old'  # TODO: Update code to 'new' style

[tool.pytest.ini_options]
minversion = '6.0.1'
addopts = '--verbosity=2 -rfp --strict-markers --cov-report=term --cov-report=html --cov-report=xml --cov'
testpaths = [ 'tests' ]
log_cli = true
log_level = 'DEBUG'
log_cli_level = 'DEBUG'
log_file_level = 'DEBUG'
junit_family = 'xunit2'
# required_plugins = 'pytest-xdist>=1.0'

[tool.setuptools_scm]
