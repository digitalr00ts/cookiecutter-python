[tox]
minversion = 3.7.0
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:true}
isolated_build = true
envlist = pypy3{6},py3{6,7,8,9,10},lint,style,type,security,pkg,docs

[testenv]
description = Execute Tests
py3:     basepython = python3
py3.6:   basepython = python3.6
py3.7:   basepython = python3.7
py3.8:   basepython = python3.8
py3.9:   basepython = python3.9
py3.10:  basepython = python3.10
pypy3:   basepython = pypy3
pypy3.6: basepython = pypy3.6
passenv = 
    PYTEST_XDIST_PROC_NR
deps =
    coveralls: coveralls
extras = test
commands =
    pytest --numprocesses={env:PYTEST_XDIST_PROC_NR:auto} \
        --cov-report=xml:{toxworkdir}/coverage-{envname}.xml \
        --cov-report=html:{toxworkdir}/htmlcov-{envname} \
        --junitxml {toxworkdir}/pytest-{envname}.junit.xml \
        {posargs}
    coveralls: coveralls

[testenv:lint]
# TODO: Switch to Flakehell
description = Static Analysis
basepython = python3
extras =
    lint
    test
commands = pylint src/ setup.py tests/

[testenv:style]
# TODO: Integrate with lint
description = Style Checking
basepython = python3
usedevelop = true
deps =
    black
    isort[pyproject] == <5
    flynt
commands =
    isort --check-only --recursive src/ setup.py tests/
    black --check src/ setup.py tests/
    flynt --line_length 98 --transform-concats --fail-on-change src/ setup.py tests/

[testenv:type]
description = Type Checking
basepython = python3
usedevelop = true
deps =
    pytype
commands = pytype src/

[testenv:security]
# TODO: Switch to PyUp
description = Security Checks
basepython = python3
usedevelop = true
deps =
    bandit
    pipenv
commands =
    pipenv check
    bandit --recursive src/

[testenv:pkg]
description = Check Distribution Package
basepython = python3
skip_install = true
deps =
    pyroma
    readme_renderer[md]
    twine
commands_pre =
    python3 setup.py sdist bdist_wheel
commands =
    pyroma .
    twine check dist/*

[testenv:docs]
description = Check Distribution Package
basepython = python3
extras =
    docs
setenv =
    DOC_DIR = docs
commands =
    rstcheck -r {env:DOC_DIR}/
    # sphinx-apidoc --separate --module-first -o "{toxinidir}/{env:DOC_DIR}" "{toxinidir}/src/"
    sphinx-build -v --color {posargs} {env:DOC_DIR} "{toxinidir}/{env:DOC_DIR}/_build"